<!DOCTYPE sect2 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
               "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
		<!ENTITY % darktable_dtd SYSTEM "../../dtd/darktable.dtd">
		%darktable_dtd;
		]>
<sect2 status="final" id="multiple_instances">

  <title>Multiple instances</title>

  <indexterm>
    <primary>multiple instances</primary>
  </indexterm>

  <para>
    Many of darktable's modules can be applied multiple times. Each instance of that module
    behaves like any other module, taking its input from the module below in the pixelpipe
    delivering its output to the module above.
  </para>

  <sect3 status="final" id="multiple_instances_use_cases">

    <title>Typical use cases</title>

    <para>
      There are many occasions where it makes sense to have an operation act more than once in
      the pixelpipe. Here are a few use cases.
    </para>

    <itemizedlist>

      <listitem><para>
        Most of our modules are highly versatile and depending on parameters can deliver quite
        varying effects. For example the <emphasis>fill light</emphasis> module
        (<xref linkend="fill_light"/>) allows local modification of lightness based on pixel
        values. You might want to do two lightness corrections in your image at the same
        time&nbsp;&ndash; one for dark tones and another one for lighter tones.
      </para></listitem>

      <listitem><para>
        You might want to apply a denoising module like <emphasis>denoise (profile)</emphasis>
        (<xref linkend="denoise_profiled"/>) with two different parameter sets. One to do luma
        denoising and another set of parameters to do chroma denoising. You could do so by
        generating two instances and use the first one only on luma by selecting blend mode
        <quote>lightness</quote> and use the second one just for chroma by selecting blend mode
        <quote>color</quote> (see <xref linkend="blending_operators"/>).
      </para></listitem>

      <listitem><para>
        In an even more elaborate case you could have a module act on different parts of your
        image. As an example you might want to apply a certain gradation curve with module
        <emphasis>tone curve</emphasis> (<xref linkend="tone_curve"/>) to your complete image
        and have a second curve being applied specifically to skin tones. All of the controls
        offered by <emphasis>drawn masks</emphasis> (<xref linkend="drawn_mask"/>) and
        <emphasis>parametric masks</emphasis> (<xref linkend="parametric_mask"/>) may be used to
        select those parts of an image where each of the module instances are applied.
      </para></listitem>

    </itemizedlist>

    <para>
      Please be aware that of course each instance also adds to the workload of your pixelpipe.
      Generating too many instances&nbsp;&ndash; especially of the more demanding
      modules&nbsp;&ndash; will certainly cause some noticeable slow-down.
    </para>

  </sect3>

  <sect3 status="final" id="multiple_instances_managing">

    <title>Managing instances</title>

    <informaltable frame="none">
      <tgroup cols="2" colsep="0" rowsep="0">
        <colspec colwidth="6*"/>
        <colspec colwidth="4*"/>
        <tbody>
          <row>
            <entry>
              When clicking on the
              <inlinegraphic fileref="&icon_module_instances;"  scalefit="1" width="4%" align="center"/>
              icon a drop-down menu will appear.
            </entry>
            <entry>
              <graphic fileref="darkroom/concepts/images/instances.png" scalefit="1" width="80%" align="center" />
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>
      Selecting <quote>new instance</quote> generates a new module instance above any existing
      ones. All parameters are set to default values. The new instance gets its own complete set
      of GUI controls and a number appended to the base module name for distinction.
    </para>

    <para>
      Selecting <quote>duplicate instance</quote> behaves in a similar way. The only difference:
      the new instance will inherit all parameter settings from its parent.
    </para>

    <para>
      darktable applies all modules in a defined order according to their type. Therefore all
      instances of a particular module will occur together in the pixelpipe. You can however
      decide on the relative order in which the different instances of a module are applied by
      selecting <quote>move up</quote> or <quote>move down</quote> to shift the position of the
      instance among its peers.
    </para>

    <para>
      To delete an instance just press <quote>delete</quote> from the drop-down menu.
    </para>

    <para>
      An instance can have any name without influencing the edits. To change the name use the
      <quote>rename</quote> option. See <xref linkend="history_stack"/> for more details on how
      the instance name impacts copying and pasting history stacks.
    </para>

  </sect3>

</sect2>
